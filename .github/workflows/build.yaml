name: Build
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pull-devcontainer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker build -t devcontainer .devcontainer
      - run: docker run -it --detach devcontainer /bin/sh
      - run: docker ps -a
      - run: docker exec devcontainer echo foo
  #     - run: docker ps -a
  #     - run: docker exec devcontainer ls -l /tmp
  #     - run: docker ps -a
  #     - run: |
  #         docker commit "$(docker ps --latest --quiet)" \
  #           nomiro/devcontainers:universal
  #     - run: |
  #         docker export "$(docker ps --latest --quiet)" |
  #           gzip >/tmp/devcontainer.tar.gz
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: devcontainer
  #         path: /tmp/devcontainer.tar.gz

  # configure-matrix:
  #   name: Configure matrix
  #   needs: pull-devcontainer
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: devcontainer
  #         path: /tmp
  #     - run: ls -l /tmp
  #     - name: docker image load
  #       run: |
  #         gunzip -c /tmp/devcontainer.tar.gz |
  #           docker import - devcontainer:latest
  #     - name: docker image
  #       run: docker image ls
  #     - run: |
  #         docker run -it --detach --name devcontainer \
  #           devcontainer:latest /bin/sh
  #     - run: docker ps
  #     - run: docker exec devcontainer ls -l /tmp
  #     - run: docker ps -a
  #     - run: docker exec devcontainer cat /tmp/bar
  #     - uses: actions/checkout@v2
  #     - name: Set lint targets
  #       id: set-matrix
  #       run: |
  #         echo "::set-output name=matrix::$(make lint-targets | \
  #           jq -Rc '[inputs]')"
  #   outputs:
  #     matrix: ${{ steps.set-matrix.outputs.matrix }}

  # lint-matrix:
  #   name: Lint matrix
  #   needs: configure-matrix
  #   runs-on: ubuntu-latest
  #   container:
  #     image: docker://nomiro/devcontainers:universal
  #   strategy:
  #     matrix:
  #       targets: ${{ fromJSON(needs.configure-matrix.outputs.matrix) }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Make ${{ matrix.target }}
  #       - run docker run nomiro/devcontainers:universal echo foo
  #       # run: make lint-${{ matrix.target }}
